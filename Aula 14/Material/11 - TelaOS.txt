/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.mycompany.sistemacontrole.Telas;


import java.sql.*;
import com.mycompany.sistemacontrole.ModuloConexao.ModuloConexao;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class TelaOS extends javax.swing.JInternalFrame {
    Connection conexao = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    
    public TelaOS() {
        initComponents();
        conexao = ModuloConexao.conector();
    }


    //Método Consultar
    public void consultar_cliente(){
        //String sql = "select b.os, b.data_os, b.equipamento, b.defeito, b.servico, b.tecnico, b.valor, a.idcli, a.nomecli, a.fonecli from tbclientes a, tbos b where nomecli=? and a.idcli = b.idcli";
        String sql = "select a.idcli, a.nomecli, a.fonecli from tbclientes a where nomecli=?";
        try {
            pst=conexao.prepareStatement(sql);
            pst.setString(1, txtCliPesquisa.getText());
            rs=pst.executeQuery();
            if(rs.next()){
                txtCliId.setText(rs.getString(1));
            } else {
                JOptionPane.showMessageDialog(null, "Cliente não possui ordem de serviço");
                //as linhas abaixo limpam os campos
                txtOs.setText(null);
                txtData.setText(null);
                //txtCliId.setText(null);
                txtOsEquip.setText(null);
                txtOsDef.setText(null);
                txtOsServ.setText(null);
                txtOsTec.setText(null);
                txtOsValor.setText(null);
                //txtCliPesquisa.setText(null);
            }
        } catch (Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    } 
    
    //Método Adicionar OS
    private void adicionar_os(){
        String sql = "insert into tbos (equipamento, defeito, servico, tecnico, valor, idcli) values (?,?,?,?,?,?)";
        try {
            pst=conexao.prepareStatement(sql);
            pst.setString(1, txtOsEquip.getText());
            pst.setString(2, txtOsDef.getText());
            pst.setString(3, txtOsServ.getText());
            pst.setString(4, txtOsTec.getText());
            pst.setString(5, txtOsValor.getText().replace(",","."));
            pst.setString(6, txtCliId.getText());
            //validação dos campos obrigatórios 
            if((txtCliId.getText().isEmpty()) || (txtOsEquip.getText().isEmpty()) || txtOsDef.getText().isEmpty() ) {
                JOptionPane.showMessageDialog(null, "Preencher todos os campos obrigatórios");
        } else {
            int adicionado = pst.executeUpdate();
            if(adicionado > 0) {
                JOptionPane.showMessageDialog(null, "OS adiocionada com sucesso !");
                txtData.setText(null);
                txtOsEquip.setText(null);
                txtOsDef.setText(null);
                txtOsServ.setText(null);
                txtOsTec.setText(null);
                txtOsValor.setText(null);
                txtCliId.setText(null);
                txtCliPesquisa.setText(null);
            }
                }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    //Método Consultar OS
    public void consultar_os(){
        String sql = "select a.os, a.data_os, a.equipamento, a.defeito, a.servico, a.tecnico, a.valor, a.idcli, b.nomecli from tbos a, tbclientes b where os=? and a.idcli = b.idcli";
        try {
            pst=conexao.prepareStatement(sql);
            pst.setString(1, txtOs.getText());
            rs=pst.executeQuery();
            if(rs.next()){
                txtOs.setText(rs.getString(1));
                txtData.setText(rs.getString(2));
                txtOsEquip.setText(rs.getString(3));
                txtOsDef.setText(rs.getString(4));
                txtOsServ.setText(rs.getString(5));
                txtOsTec.setText(rs.getString(6));
                txtOsValor.setText(rs.getString(7));
                txtCliId.setText(rs.getString(8));
                txtCliPesquisa.setText(rs.getString(9));
                
            } else {
                JOptionPane.showMessageDialog(null, "OS não cadastrado.");
                //as linhas abaixo limpam os campos
                txtOs.setText(null);
                txtData.setText(null);
                txtOsEquip.setText(null);
                txtOsDef.setText(null);
                txtOsServ.setText(null);
                txtOsTec.setText(null);
                txtOsValor.setText(null);
                txtCliId.setText(null);
                txtCliPesquisa.setText(null);
            }
        } catch (Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    //Método Alterar OS
    private void alterar_os() {
        String sql = "update tbos set equipamento=?, defeito=?, servico=?, tecnico=?, valor=? where os=?";
        try {
            pst=conexao.prepareStatement(sql);
            pst.setString(1, txtOsEquip.getText());
            pst.setString(2, txtOsDef.getText());
            pst.setString(3, txtOsServ.getText());
            pst.setString(4, txtOsTec.getText());
            pst.setString(5, txtOsValor.getText().replace(",","."));
            pst.setString(6, txtOs.getText());
            //validação dos campos obrigatórios 
            if((txtOsEquip.getText().isEmpty()) || (txtCliId.getText().isEmpty()) || txtOsDef.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Preencher todos os campos obrigatórios");
                } else {
                    int adicionado = pst.executeUpdate();
                    if(adicionado > 0) {
                        JOptionPane.showMessageDialog(null, "OS alterada com sucesso !");
                txtOs.setText(null);
                txtData.setText(null);
                txtOsEquip.setText(null);
                txtOsDef.setText(null);
                txtOsServ.setText(null);
                txtOsTec.setText(null);
                txtOsValor.setText(null);
                txtCliId.setText(null);
                txtCliPesquisa.setText(null);
                    }
                }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    //Método Remover
    private void remover_os() {
        int confirma=JOptionPane.showConfirmDialog(null, "Tem certeza que deseja remover a OS ? ","Atenção", JOptionPane.YES_NO_OPTION);
        if(confirma==JOptionPane.YES_OPTION) {
            String sql = "delete from tbos where os=?";
            try {
                pst=conexao.prepareStatement(sql);
                pst.setString(1, txtOs.getText());
                int apagado = pst.executeUpdate();
                if(apagado > 0) {
                    JOptionPane.showMessageDialog(null, "OS removida com sucesso !");
                        txtOs.setText(null);
                        txtData.setText(null);
                        txtCliId.setText(null);
                        txtCliPesquisa.setText(null);
                        txtOsEquip.setText(null);
                        txtOsDef.setText(null);
                        txtOsServ.setText(null);
                        txtOsTec.setText(null);
                        txtOsValor.setText(null);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);                
            }
        }
    }
    
    //método para pesquisar clientes
    private void atualizar_tabela(){
        String sql = "select os, data_os, equipamento, defeito, servico, tecnico, valor, idcli from tbos";
        try {
            pst=conexao.prepareStatement(sql);
            //pst.setString(1,txtCliPesquisa.getText());
            rs=pst.executeQuery();
            
            //tblClientes.setModel(DbUtils.resultSetToTableModel(rs));
            DefaultTableModel modelo = (DefaultTableModel) tblOs.getModel();
            modelo.setRowCount(0);
            
            ResultSetMetaData metaData = rs.getMetaData();
            int colunas = metaData.getColumnCount();
            modelo.setColumnCount(0);
            for(int i = 1;i <= colunas; i++){
                modelo.addColumn(metaData.getColumnName(i));
            }
            while (rs.next()){
                Object[] linha = new Object[colunas];
                for(int i=1;i<=colunas;i++){
                    linha[i-1]=rs.getObject(i);
                }
                modelo.addRow(linha);
            }
            rs.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    private void limpar_pesquisa(){
        txtOs.setText(null);
        txtData.setText(null);
        txtOsEquip.setText(null);
        txtOsDef.setText(null);
        txtOsServ.setText(null);
        txtOsTec.setText(null);
        txtOsValor.setText(null);
        txtCliId.setText(null);
        txtCliPesquisa.setText(null);
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {


        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtOsEquip = new javax.swing.JTextField();
        txtOsDef = new javax.swing.JTextField();
        txtOsServ = new javax.swing.JTextField();
        txtOsTec = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtOsValor = new javax.swing.JTextField();
        btnOsAdicionar = new javax.swing.JButton();
        btnOsAlterar = new javax.swing.JButton();
        btnOsExcluir = new javax.swing.JButton();
        txtOs = new javax.swing.JTextField();
        txtData = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnLimpPes = new javax.swing.JButton();
        btnPesOs = new javax.swing.JButton();
        btnOsPesquisar = new javax.swing.JButton();
        txtCliPesquisa = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtCliId = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOs = new javax.swing.JTable();
        btnAtualizar = new javax.swing.JButton();


        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("OS");
        setPreferredSize(new java.awt.Dimension(640, 480));


        jLabel4.setText("*Equipamento");


        jLabel5.setText("*Defeito");


        jLabel6.setText("Serviço");


        jLabel7.setText("Técnico");


        jLabel8.setText("Valor Total");


        btnOsAdicionar.setText("Adicionar");
        btnOsAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOsAdicionarActionPerformed(evt);
            }
        });


        btnOsAlterar.setText("Alterar");
        btnOsAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOsAlterarActionPerformed(evt);
            }
        });


        btnOsExcluir.setText("Remover");
        btnOsExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOsExcluirActionPerformed(evt);
            }
        });


        txtData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDataActionPerformed(evt);
            }
        });


        jLabel2.setText("Data");


        jLabel1.setText("Nº OS");


        btnLimpPes.setText("Limpar OS");
        btnLimpPes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpPesActionPerformed(evt);
            }
        });


        btnPesOs.setText("Pesquisa OS");
        btnPesOs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesOsActionPerformed(evt);
            }
        });


        btnOsPesquisar.setText("Pesquisar");
        btnOsPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOsPesquisarActionPerformed(evt);
            }
        });


        jLabel10.setText("Nome");


        jLabel9.setText("*Id");


        txtCliId.setEditable(false);


        tblOs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "OS", "Data", "Equipamento", "Defeito", "Serviço", "Técnico", "Valor", "ID Cliente"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };


            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblOs.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblOs.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblOs);


        btnAtualizar.setText("Atualizar");
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });


        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtOsEquip, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtOsDef, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(txtOsTec, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtOsValor, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(txtOsServ, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(54, 54, 54))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(btnOsAdicionar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnOsAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnOsExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(111, 111, 111)
                        .addComponent(btnAtualizar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCliId, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtOs, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtData)
                                .addGap(18, 18, 18)
                                .addComponent(btnPesOs)
                                .addGap(18, 18, 18)
                                .addComponent(btnLimpPes, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCliPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnOsPesquisar))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 598, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtOs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesOs)
                    .addComponent(btnLimpPes))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCliId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(txtCliPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOsPesquisar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtOsEquip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtOsDef, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtOsServ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtOsTec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtOsValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOsAlterar)
                    .addComponent(btnOsExcluir)
                    .addComponent(btnOsAdicionar)
                    .addComponent(btnAtualizar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(242, 242, 242))
        );


        setBounds(0, 0, 640, 480);
    }// </editor-fold>//GEN-END:initComponents


    private void btnOsPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOsPesquisarActionPerformed
        // TODO add your handling code here:
        consultar_cliente();
        
    }//GEN-LAST:event_btnOsPesquisarActionPerformed


    private void txtDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDataActionPerformed


    private void btnOsAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOsAdicionarActionPerformed
        // TODO add your handling code here:
        adicionar_os();
    }//GEN-LAST:event_btnOsAdicionarActionPerformed


    private void btnPesOsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesOsActionPerformed
        // TODO add your handling code here:
        consultar_os();
    }//GEN-LAST:event_btnPesOsActionPerformed


    private void btnLimpPesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpPesActionPerformed
        // TODO add your handling code here:
        limpar_pesquisa();
        
    }//GEN-LAST:event_btnLimpPesActionPerformed


    private void btnOsAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOsAlterarActionPerformed
        // TODO add your handling code here:
        alterar_os();
    }//GEN-LAST:event_btnOsAlterarActionPerformed


    private void btnOsExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOsExcluirActionPerformed
        // TODO add your handling code here:
        remover_os();
    }//GEN-LAST:event_btnOsExcluirActionPerformed


    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        // TODO add your handling code here:
        atualizar_tabela();
    }//GEN-LAST:event_btnAtualizarActionPerformed




    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnLimpPes;
    private javax.swing.JButton btnOsAdicionar;
    private javax.swing.JButton btnOsAlterar;
    private javax.swing.JButton btnOsExcluir;
    private javax.swing.JButton btnOsPesquisar;
    private javax.swing.JButton btnPesOs;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblOs;
    private javax.swing.JTextField txtCliId;
    private javax.swing.JTextField txtCliPesquisa;
    private javax.swing.JTextField txtData;
    private javax.swing.JTextField txtOs;
    private javax.swing.JTextField txtOsDef;
    private javax.swing.JTextField txtOsEquip;
    private javax.swing.JTextField txtOsServ;
    private javax.swing.JTextField txtOsTec;
    private javax.swing.JTextField txtOsValor;
    // End of variables declaration//GEN-END:variables
}